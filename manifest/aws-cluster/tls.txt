1.- Create IAM policy

```
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": "route53:GetChange",
      "Resource": "arn:aws:route53:::change/*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "route53:ChangeResourceRecordSets",
        "route53:ListResourceRecordSets"
      ],
      "Resource": "arn:aws:route53:::hostedzone/*"
    },
    {
      "Effect": "Allow",
      "Action": "route53:ListHostedZonesByName",
      "Resource": "*"
    }
  ]
}
```

2.- Install cert-manager in cluster

```
helm install cert-manager jetstack/cert-manager \
  --namespace cert-manager \
  --create-namespace \
  --set installCRDs=true \
  --set "podDnsConfig.nameservers[0]=8.8.8.8" \
  --set "podDnsConfig.nameservers[1]=1.1.1.1"
```

3.- Create Issuer Secret
```
kubectl apply -f letsencrypt-issuer-secret.yml
```

4.- Create ClusterIssuer
```
kubectl apply -f letsencrypt-issuer.yml
```

5.- Create Ingress
```
kubectl apply -f ingress.yml
```


---

Command for debugging

```
kubectl logs --namespace cert-manager -l app=cert-manager
kubectl get clusterissuers --namespace cert-manager
kubectl get secrets --namespace cert-manager
kubectl get pods --namespace cert-manager
kubectl logs -n cert-manager -l app.kubernetes.io/instance=cert-manager
kubectl describe certificate -n cert-manager
kubectl -n app get challenges.acme.cert-manager.io
```